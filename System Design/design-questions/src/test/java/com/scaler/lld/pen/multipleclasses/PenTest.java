package com.scaler.lld.pen.multipleclasses;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import org.junit.Test;

import com.scaler.lld.pen.models.Ink;
import com.scaler.lld.pen.models.InkType;
import com.scaler.lld.pen.models.Nib;
import com.scaler.lld.pen.models.NibType;
import com.scaler.lld.pen.models.Refill;

public class PenTest {

    @Test
    public void testGelPenCreation() {

        Ink ink = new Ink("Black", 100, InkType.GEL);
        Nib nib = new Nib(0, NibType.GEL);
        Refill refill = new Refill(true, ink, nib);

        GelPen gelPen = new GelPen("Parker", "Gel Pen", 100.0, refill);
        assertNotNull("If ctor is called, then pen should not be null", gelPen);

        assertNotNull("If pen is GEL, then refill should not be null", gelPen.getRefill());

        assertEquals("If a pen is created, then capacity should be 100", gelPen.getRefill().getInk().getQuantity(),
                100);
    }

    @Test
    public void testFountainPenCreation() {

        Ink ink = new Ink("Black", 100, InkType.FOUNTAIN);
        Nib nib = new Nib(0, NibType.FOUNTAIN);

        FountainPen fountainPen = new FountainPen("Parker", "Fountain Pen", 100.0, ink, nib);
        assertNotNull("If ctor is called, then pen should not be null", fountainPen);

        assertNotNull("If pen is FOUNTAIN, then ink should not be null", fountainPen.getInk());
        assertNotNull("If pen is FOUNTAIN, then nib should not be null", fountainPen.getNib());

        assertEquals("If a pen is created, then capacity should be 100", fountainPen.getInk().getQuantity(),
                100);
    }

}
